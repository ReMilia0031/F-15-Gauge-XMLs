<Gauge Name="F-15 SYSTEMS" Version="8.90">
<!--
Version 8.90
	[EDT} ***
Version 8.80
	[EDT] COMM , VMS
Version 8.50
	[EDT] ELECTRICAL
Version 8.20
	[DEL] TOT TEMP FUEL SW (MOVED : S_ELEC)
Version 8.10
	[ADD] JFS SYS
Version 8.00
	[EDT] FAIRING
Version 7.80
	[***]
Version 7.50
	[DEL] INLET RAMP CONTROLLER > (MOVED : S_ELEC)
Version 7.00
	[EDT] INTERNAL_POWER > ELECTRICAL SYSTEM
Version 6.90
	[DEL]EMERGENCY BOOST PUMP ON CAUTION (MOVED : S_ELEC)
	[DEL]BOOST SYS MALFUNCTION (MOVED : S_ELEC)
Version 6.80
	[EDT] ECS (SOUND)
Version 6.70
	[EDT] EMERGENCY BRAKE CONTROLLER
Version 6.50
	[ADD] COUNTERMEASURES SYSTEM
	[DEL] ANTI-SKID (MOVED : S_ELEC)
Version 6.0
	[ADD] CANOPY EJECTION CONTROLLER
	[ADD] EMERGENCY RF DOOR CONTROLLER
	[ADD] INLET RAMP CONTROLLER
	[ADD] FLAPS BLOW-IN CONTROLLER
Version 5.0
	[ADD] MASTER ARM (MOVED : S_ARMT)
	[ADD] EMERGENCY JETTION
	[ADD] EMERGENCY VENT (NO SCRIPTS)
	[ADD] WEAPON JETTION
	[DEL] GAUGE NEEDLE CIRCUIT / GAUGE_BIT (MOVED : S_ELEC)
-->
	<Element Name="INIT">
		<Select>
      		<Value>
			(L:SYS_INIT) 0 ==
				if{
					1 (>L:SYS_INIT)
					0 (>L:ENG1_INIT)
					0 (>L:ENG2_INIT)

					1 (>L:SW1_FS_MISC_ROLL_RATIO)
					1 (>L:SW1_FS_MISC_L_INLET_RAMP)
					1 (>L:SW1_FS_MISC_R_INLET_RAMP)
					2 (>L:SW2_FS_MISC_ANTI_SKID)
					0 (>L:SW2_FS_MISC_LANDING_TAXI)

					1 (>L:SW2_FS_FUEL_CTRL_WING)
					2 (>L:SW2_FS_FUEL_CTRL_CTR)
					2 (>L:SW2_FS_FUEL_CTRL_CONF)
					0 (>L:SW1_FS_FUEL_DUMP)
					1 (>L:SW2_FS_FUEL_EMERG_TX)
					0 (>L:SW1_FS_FUEL_EXT_TX)
					0 (>L:SW2_FS_FUEL_SLIP)

					2 (>L:KNOB_FS_RDR_PWR)
					4 (>L:KNOB_FS_RDR_STORE)
					2 (>L:KNOB_FS_RDR_SPL_MODE)
					1 (>L:SW1_FS_RDR_MODE_CONTR)
					2 (>L:KNOB_FS_RDR_RANGE)
					4 (>L:KNOB_FS_RDR_EL_SCAN)
					2 (>L:KNOB_FS_RDR_AZ_SCAN)
					1 (>L:KNOB_FS_RDR_MODE_SEL)
					1 (>L:IND_FS_RDR_BAND)
					3 (>L:IND_FS_RDR_CHAN)
				
					1 (>L:SW2_FS_EW_RWR_ICS)
					1 (>L:SW2_FS_EW_PODS)
					1 (>L:SW2_FS_EW_ICS)

					1 (>L:SW2_FS_IFF_ANTENNA_SEL)
					1 (>L:SW2_FS_IFF_MODE_4)
					1 (>L:SW2_FS_IFF_MODE)
					1 (>L:SW2_FS_IFF_LIGHT_AUD)
					1 (>L:SW2_FS_IFF_MASTER)
					73 (>L:IND_FS_IFF_M1_CODE)
					1 (>L:SW1_FS_IFF_M1)
					1 (>L:SW1_FS_IFF_M2)
					1 (>L:SW1_FS_IFF_M3)
					1 (>L:SW1_FS_IFF_MC)

					1 (>L:KNOB_FS_AAI_MASTER)
					48 (>L:IND_FS_AAI_MODE)
					7777 (>L:IND_FS_AAI_CODE)

					0 (>L:SW2_FS_ICS_OVERRIDE)

					0 (>L:SW1_BIT_RESET)
					0 (>L:BTN_BIT_CC)
					0 (>L:BTN_BIT_INITATE)
					0 (>L:KNOB_BIT_MODE)

					1 (>L:SW2_FS_GND_PWR_1)
					0 (>L:SW1_FS_COOL_2)
					0 (>L:SW1_FS_COOL_3)
					0 (>L:SW1_FS_COOL_4)
					1 (>L:SW2_FS_CC)

					0 (>L:KNOB_FS_ILS_VOL)
					0 (>L:SW1_FS_TCN_X_Y)
					0 (>L:KNOB_FS_TCN_MODE)
					0 (>L:KNOB_FS_TCN_VOL)

					2 (>L:SW2_FS_CAS_YAW)
					2 (>L:SW2_FS_CAS_PITCH)
					2 (>L:SW2_FS_CAS_ROLL)
					1 (>L:SW1_FS_CAS_ALT_HOLD)
					1 (>L:SW1_FS_CAS_ATT_HOLD)

					0 (>L:SW1_FS_THR_L_FING)
					0 (>L:SW1_FS_THR_R_FING)
					0 (>L:SW1_FS_THROT_L)
					0 (>L:SW1_FS_THROT_R)

					0 (>L:SW2_FS_THR_RUD_TRIM)
					0 (>L:SW1_FLAPS)

					0 (>L:KNOB_FS_LIGHT_FORM)
					0 (>L:KNOB_FS_LIGHT_POS)
					0 (>L:SW1_FS_LIGHT_ANTICOL)

					1 (>L:SW2_FS_ICCP_R1_ANT)

					3 (>L:KNOB_FS_ICCP_TEWS_CAUT)
					3 (>L:KNOB_FS_ICCP_TEWS_LAUNCH)
					0 (>L:BTN_FS_ICCP_TEWS_LAUNCH)
					0 (>L:KNOB_FS_ICCP_ICS)
					0 (>L:KNOB_FS_ICCP_WPN)
					0 (>L:KNOB_FS_ICCP_R2_VOL)
					0 (>L:KNOB_FS_ICCP_JTIDS)
					
					0 (>L:SW2_FS_ICCP2_MODE_SEL)
					2 (>L:BTN_FS_ICCP2_CHAN_SET)
					0 (>L:KNOB_FS_ICCP2_UHF2_VOL)
					1 (>L:SW1_FS_ICCP2_CIPHER_ZERO)
					2 (>L:SW2_FS_ICCP2_CIPHER_SEL)
					0 (>L:SW2_FS_ICCP2_GRD_SEL)
					2 (>L:SW2_FS_ICCP2_ADF)

					6 (>L:KNOB_FS_ICCP3_INT)
					0 (>L:KNOB_FS_ICCP3_CHAN)
					1 (>L:SW2_FS_ICCP3_CHAN_SET)
					0 (>L:SW2_FS_ICCP3_DSPL_FREQ)
					1 (>L:SW2_FS_ICCP3_TRANS)
					1 (>L:KNOB_FS_ICCP3_MODE)

					1 (>L:SW2_FS_ICCP3_R2_ANT)
					1 (>L:SW2_FS_ICCP3_GRD_RECV)
					1 (>L:SW2_FS_ICCP3_ADF)

					0 (>L:SW1_FS_KY58_ZEROIZE)
					0 (>L:SW1_FS_KY58_DELAY)
					0 (>L:KNOB_FS_KY58_PLAIN)
					0 (>L:KNOB_FS_KY58_MODE)
					0 (>L:KNOB_FS_KY58_FILL)
					1 (>L:SW1_FS_KY58_POWER)

					0 (>L:SW1_FS_VMAX)
					0 (>L:SW2_FS_SEAT_ADJ)
					1 (>L:SW1_FS_EWWS)
					0 (>L:SW1_FS_NCTR)
					0 (>L:SW1_FS_EAR)
					1 (>L:SW1_FS_ASO)

					1 (>L:SW2_FS_OXY_EMER)
					0 (>L:SW1_FS_OXY_DILUTER)
					1 (>L:SW2_FS_OXY_SUPPLY)

					1 (>L:SW1_FS_ENG_GEN_L)
					1 (>L:SW1_FS_ENG_GEN_R)
					2 (>L:SW2_FS_ENG_EMER_GEN)
					1 (>L:SW1_FS_ENG_CONT_L)
					1 (>L:SW1_FS_ENG_CONT_R)
					0 (>L:SW2_FS_ENG_EXT_PWR)
					1 (>L:SW1_FS_ENG_MASTER_L)
					1 (>L:SW1_FS_ENG_MASTER_R)
					0 (>L:SW1_FS_ENG_JFS)

					1 (>L:KNOB_FS_NAV_DATA)
					1 (>L:KNOB_FS_NAV_MODE)
					1 (>L:KNOB_FS_NAV_INT)

					1 (>L:SW1_FS_TEWS_ICS)
					1 (>L:SW1_FS_TEWS_SET1)
					1 (>L:SW1_FS_TEWS_SET2)
					1 (>L:SW1_FS_TEWS_SET3)
					1 (>L:SW1_FS_TEWS_RWR)
					1 (>L:SW1_FS_TEWS_EWWS_PWR)
					1 (>L:SW1_FS_TEWS_EWWS_AUD)

					1 (>L:BTN_FS_COMPASS_ERECT)
					1 (>L:BTN_FS_COMPASS_SYNC)
					1 (>L:KNOB_FS_COMPASS_MODE)
					1 (>L:SW1_FS_COMPASS_N_S)
					1 (>L:KNOB_FS_COMPASS_LAT)

					1 (>L:BTN_FS_ECS_OXY_TEST)
					1 (>L:SW2_FS_ECS_ANTIFOG)
					0 (>L:SW1_FS_ECS_WINDSHIELD)
					1 (>L:SW1_FS_ECS_PITOT)
					1 (>L:SW2_FS_ECS_ENG)

					2 (>L:SW2_FS_AIRCON_MODE)
					2 (>L:KNOB_FS_AIRCON_TEMP)
					2 (>L:KNOB_FS_AIRCON_SOURCE)

					0 (>L:KNOB_FS_INT_LT_L_CONSOLE)
					0 (>L:KNOB_FS_INT_LT_R_CONSOLE)
					0 (>L:SW1_FS_INT_LT_TEST)
					0 (>L:KNOB_FS_INT_LT_INST_AUX)
					0 (>L:SW1_FS_INT_LT_INST_STBY)
					0 (>L:KNOB_FS_INT_LT_INST_FLT)
					0 (>L:KNOB_FS_INT_LT_INST_ENG)
					1 (>L:KNOB_FS_INT_LT_CAUTION)
					0 (>L:KNOB_FS_INT_LT_STORM)
					
					2 (>L:KNOB_FS_ECM1_MODE)
					2 (>L:BTN_FS_ECM1_RST)
					2 (>L:KNOB_FS_ECM2_MODE)
					2 (>L:BTN_FS_ECM2_RST)

					1 (>L:SW2_FS_CMD_DISP_SEL)
					3 (>L:KNOB_FS_CMD_MODE)
					0 (>L:SW1_FS_CMD_JETT)


					1 (>L:SW2_FS_FIRE_DISCHARGE)
					0 (>L:BTN_FS_FIRE_LENG_EXEC)
					0 (>L:BTN_FS_FIRE_RENG_EXEC)
					0 (>L:BTN_FS_FIRE_AMAD_EXEC)

					0 (>L:SW1_FS_VSD_CNT)
					0 (>L:KNOB_FS_VSD_RDR)
					6 (>L:KNOB_FS_VSD_SYM)
					1 (>L:KNOB_FS_VSD_BRT)
					1 (>L:KNOB_FS_VSD_CONT)

					11 (>L:KNOB_FS_MCCP_CHAN)
					0 (>L:KNOB_FS_MCCP_VOL)
					1 (>L:KNOB_FS_MCCP_MODE)
					2 (>L:SW2_FS_MCCP_MODE)

					1 (>L:SW1_FS_HUD_BRT)
					1 (>L:SW1_FS_HUD_SYM)
					1 (>L:SW2_FS_HUD_RTCL)
					1 (>L:SW2_FS_HUD_CAMERA)
					6 (>L:KNOB_FS_HUD_SYM_BRT)
					1 (>L:SW1_FS_HUD_DAY)
					1 (>L:KNOB_FS_HUD_STBY_RTCL)
					270 (>L:KNOB_FS_HUD_RTCL_DEPR)

					30 (>L:IND_VTRS_REMAIN)
					0 (>L:KNOB_VTRS_RESET)
					0 (>L:KNOB_FS_VTRS_RECORD)
					0 (>L:SW2_FS_VTRS_RECORD)
					1 (>L:SW2_FS_VTRS_CAMERA)

					6 (>L:KNOB_FS_TEWS_INT)

					0 (>L:SW1_FS_EMER_GEAR)
					0 (>L:SW1_FS_EMER_CANOPY)
					0 (>L:SW1_FS_HOOK)

					3 (>L:KNOB_FS_WEP_JETT_SEL)
					2 (>L:KNOB_FS_MPCD_PWR)
					0 (>L:SW1_FS_MASTER_ARM)

					1 (>L:SW1_FS_PITCH_RATIO)

					0 (>L:KNOB_FS_STEER_MODE)
					0 (>L:SW1_FS_EMER_BRAKE)

					1 (>L:KNOB_FUEL_SELECT)
					3 (>L:KNOB_FUEL_BINGO)

					0 (>L:SW2_FS_JFS_LEVER)

					0 (>L:SW1_FS_EMER_VENT)
				}
			</Value>
		</Select>
	</Element>
	<Element Name="ENGINE">
 		<Element Name="JET FUEL STARTER SYSTEM">
			<Element Name="JFS STARTER FOR ACCUMULATOR 1">
				<Select>
					<Value>
						(L:SW2_FS_JFS_LEVER) 1 ==
						(L:SW1_FS_ENG_JFS) 1 == and
						(L:JFS_ACCUM_1) 6000 &gt; and
						(L:JFS_START) 0 == and
						(L:ENG_AVAIL) 0 == and
						(A:APU PCT RPM, Percent) 99 &lt; and
							if{
								(>K:APU_STARTER)
								1 (>L:JFS_START)
								1 (>L:JFS_PWR)
							}
					</Value>
				</Select>
			</Element>
			<Element Name="JFS STARTER FOR ACCUMULATOR 2">
				<Select>
					<Value>
						(L:SW2_FS_JFS_LEVER) 2 ==
						(L:SW1_FS_ENG_JFS) 1 == and
						(L:JFS_ACCUM_2) 6000 &gt; and
						(L:JFS_START) 0 == and
						(L:ENG_AVAIL) 0 == and
						(A:APU PCT RPM, Percent) 99 &lt; and
							if{
								(>K:APU_STARTER)
								1 (>L:JFS_START)
								1 (>L:JFS_PWR)
							}
					</Value>
				</Select>
			</Element>

			<Element Name="JFS STOP FOR ENGINE STARTED">
				<Select>
					<Value>
						(A:TURB ENG1 N2, Percent) 35 &gt;
						(A:TURB ENG2 N2, Percent) 35 &gt; and
						(A:APU PCT RPM, Percent) 50 &gt; and
							if{
								(>K:APU_OFF_SWITCH)
								1 (>L:JFS_STOP)
								0 (>L:JFS_PWR)
							}
					</Value>
				</Select>
			</Element>
			<Element Name="JFS STOP FOR SWITCH OR FAULT">
				<Select>
					<Value>
					(L:SW1_FS_ENG_JFS) 0 ==
					(L:JFS_FAULT) 1 == or
					(A:APU PCT RPM, Percent) 50 &gt; and
						if{
							(>K:APU_OFF_SWITCH)
							1 (>L:JFS_STOP)
						}
					</Value>
				</Select>
			</Element>

			<Element Name="JFS GENERATOR ON">
				<Select>
					<Value>
					(A:APU PCT RPM, Percent) 90 &gt;
					(L:APU_ON_INIT) 0 == and
						if{
							1 (>K:APU_GENERATOR_SWITCH_SET)
							1 (>L:LIGHT_JFS_READY)
							1 (>L:APU_ON_INIT)
						}
					</Value>
				</Select>
			</Element>
			<Element Name="JFS GENERATOR OFF">
				<Select>
					<Value>
					(A:APU PCT RPM, Percent) 90 &lt;
					(L:APU_ON_INIT) 1 == and
						if{
							0 (>K:APU_GENERATOR_SWITCH_SET)
							0 (>L:LIGHT_JFS_READY)
							0 (>L:APU_ON_INIT)
						}
					</Value>
				</Select>
			</Element>

			<Element Name="JFS STARTED">
				<Select>
					<Value>
					(A:APU PCT RPM, Percent) 99 &gt;
					(L:SW1_FS_ENG_JFS) 1 == and
					(L:JFS_RUN_INIT) 0 == and
						if{
							2 (>L:JFS_RUN)
							1 (>L:JFS_RUN_INIT)
						}
					</Value>
				</Select>
			</Element>
			<Element Name="JFS STOPPED">
				<Select>
					<Value>
					(A:APU PCT RPM, Percent) 99 &lt;
					(L:SW1_FS_ENG_JFS) 0 == or
					(L:JFS_RUN_INIT) 1 == and
						if{
							0 (>L:JFS_RUN)
							0 (>L:JFS_RUN_INIT)
						}
					</Value>
				</Select>
			</Element>

			<Element Name="JFS HYDRAULIC ACCUMULATORS">
				<Element Name="JFS ACCUMULATOR 1">
					<Select>
						<Value>
							(L:SW2_FS_JFS_LEVER) 1 ==
							(L:SW1_FS_ENG_JFS) 1 == and
							(L:JFS_LEVER_PULLED) 0 == and
							(L:ENG_AVAIL) 0 == and
								if{ 1 (>L:JFS_LEVER_PULLED) }

							(L:JFS_LEVER_PULLED) 1 ==
							(L:JFS_ACCUM_1) 400 &gt; and
								if{	(L:JFS_ACCUM_1) 500 - (>L:JFS_ACCUM_1) }
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:JFS_LEVER_PULLED) 1 ==
							(L:JFS_ACCUM_1) 100 &lt; and
								if{ 0 (>L:JFS_LEVER_PULLED) }
						</Value>
					</Select>
				</Element>

				<Element Name="JFS ACCUMULATOR 2">
					<Select>
						<Value>
							(L:SW2_FS_JFS_LEVER) 2 ==
							(L:SW1_FS_ENG_JFS) 1 == and
							(L:JFS_LEVER_PULLED) 0 == and
							(L:ENG_AVAIL) 0 == and
								if{ 2 (>L:JFS_LEVER_PULLED) }

							(L:JFS_LEVER_PULLED) 2 ==
							(L:JFS_ACCUM_2) 400 &gt; and
								if{ (L:JFS_ACCUM_2) 500 - (>L:JFS_ACCUM_2) }
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:JFS_LEVER_PULLED) 2 ==
							(L:JFS_ACCUM_2) 100 &lt; and
								if{ 0 (>L:JFS_LEVER_PULLED) }
						</Value>
					</Select>
				</Element>

				<Element Name="JFS ACCUMULATORS RECHARGE">
					<Select>
						<Value>
							(L:JFS_RUN) 0 ==
							(L:JFS_ACCUM_1) 7000 &lt; and
								if{
									(L:JFS_ACCUM_1) (L:PX_HYD) 500 / + (>L:JFS_ACCUM_1)
								}
							(L:JFS_RUN) 0 ==
							(L:JFS_ACCUM_2) 7000 &lt; and
								if{
									(L:JFS_ACCUM_2) (L:PX_HYD) 500 / + (>L:JFS_ACCUM_2)
								}
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="JFS MECH">
				<Element Name="JFS TURBINE">
					<Select>
						<Value>
							(A:APU PCT RPM, Percent) 62402 * 100 / (>L:JFS_TURBINE)
							(A:APU PCT RPM, Percent) 59432 * 100 / (>L:JFS_GENERAT)
						</Value>
					</Select>
				</Element>
				<Element Name="CENTRAL GEARBOX">
					<Select>
						<Value>
							(L:JFS_TURBINE) 12129 * 62402 / (>L:JFS_CG)
						</Value>
					</Select>
				</Element>
				<Element Name="AIRFRAME MOUNTED ACCESSORY DRIVE (AMAD) SYSTEM">
					<Select>
						<Value>
							(L:JFS_CG) 6 / (>L:JFS_L_AMAD)
							(L:JFS_CG) 6 / (>L:JFS_R_AMAD)

							(L:AMAD_L_COUPLE) 1 ==
								if{
									(A:TURB ENG N2:1, Percent) 2020 * 20 / (>L:JFS_L_AMAD)
								}
							(L:AMAD_R_COUPLE) 1 ==
								if{
									(A:TURB ENG N2:2, Percent) 2020 * 20 / (>L:JFS_R_AMAD)
								}
						</Value>
					</Select>
				</Element>
			</Element>
		</Element>

		<Element Name="STARTER SYSTEM">
			<Element Name="ENG1 STARTER">
				<Select>
					<Value>
						(A:GENERAL ENG COMBUSTION:2, bool) 1 ==
						(L:SW1_FS_ENG_MASTER_L) 1 == and
						(A:APU PCT RPM, Percent) 90 &gt; and
						(L:SW1_FS_THR_L_FING) 1 == and
						(L:ENG_L_STARTER_INIT) 0 == and
							if{
								1 (>L:AMAD_L_COUPLE)
								1 (>L:ENG_L_STARTER)
								1 (>L:ENG_L_STARTER_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:SW1_FS_ENG_MASTER_L) 0 ==
						(A:APU PCT RPM, Percent) 90 &lt; or
						(L:SW1_FS_THR_L_FING) 0 == or
						(A:GENERAL ENG COMBUSTION:1, bool) 1 == or
						(L:ENG_L_STARTER_INIT) 1 == and
							if{
								0 (>L:AMAD_L_COUPLE)
								0 (>L:ENG_L_STARTER)
								0 (>L:ENG_L_STARTER_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:ENG_L_STARTER) 1 ==
							if{ (A:GENERAL ENG STARTER:1, bool) !
								if{ (>K:TOGGLE_STARTER1)
								}
							}
							els{ (A:GENERAL ENG STARTER:1, bool)
								if{ (>K:TOGGLE_STARTER1)
								}
							}
					</Value>
				</Select>
			</Element>

			<Element Name="ENG2 STARTER">
				<Select>
					<Value>
						(L:SW1_FS_ENG_MASTER_R) 1 ==
						(A:APU PCT RPM, Percent) 90 &gt; and
						(L:SW1_FS_THR_R_FING) 1 == and
						(L:ENG_R_STARTER_INIT) 0 == and
							if{
								1 (>L:AMAD_R_COUPLE)
								1 (>L:ENG_R_STARTER)
								1 (>L:ENG_R_STARTER_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:SW1_FS_ENG_MASTER_R) 0 ==
						(A:APU PCT RPM, Percent) 90 &lt; or
						(L:SW1_FS_THR_R_FING) 0 == or
						(A:GENERAL ENG COMBUSTION:2, bool) 1 == or
						(L:ENG_R_STARTER_INIT) 1 == and
							if{
								0 (>L:AMAD_R_COUPLE)
								0 (>L:ENG_R_STARTER)
								0 (>L:ENG_R_STARTER_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:ENG_R_STARTER) 1 ==
							if{ (A:GENERAL ENG STARTER:2, bool) !
								if{ (>K:TOGGLE_STARTER2)
								}
							}
							els{ (A:GENERAL ENG STARTER:2, bool)
								if{ (>K:TOGGLE_STARTER2)
								}
							}
					</Value>
				</Select>
			</Element>
		</Element>

		<Element Name="ENGINE CONTROL">
			<Element Name="FINGER">
				<Select>
					<Value>
						(A:TURB ENG2 N2, Percent) 20 &gt;
						(A:GENERAL ENG1 THROTTLE LEVER POSITION, Percent) 1 &gt; and
							if{
								1 (>L:SW1_FS_THR_L_FING)
							}
							els{
								0 (>L:SW1_FS_THR_L_FING)
							}

						(A:GENERAL ENG2 THROTTLE LEVER POSITION, Percent) 1 &gt;
							if{
								1 (>L:SW1_FS_THR_R_FING)
							}
							els{
								0 (>L:SW1_FS_THR_R_FING)
							}
					</Value>
				</Select>
			</Element>
			<Element Name="THROTTLE LEVER POS">
				<Select>
					<Value>
						(A:GENERAL ENG1 THROTTLE LEVER POSITION, Percent) 20 &gt;
							if{
								1 (>L:SW1_FS_THROT_L)
							}
							els{
								(A:TURB ENG1 N2, Percent) 20 &lt;
									if{
										0 (>L:SW1_FS_THROT_L)
									}
							}

						(A:GENERAL ENG2 THROTTLE LEVER POSITION, Percent) 20 &gt;
							if{
								1 (>L:SW1_FS_THROT_R)
							}
							els{
								(A:TURB ENG2 N2, Percent) 20 &lt;
									if{
										0 (>L:SW1_FS_THROT_R)
									}
							}
					</Value>
				</Select>
			</Element>
			<Element Name="THROTTLE SET">
				<Select>
					<Value>
						(A:GENERAL ENG1 THROTTLE LEVER POSITION, Percent) 20 &lt;
 						(A:TURB ENG1 N2, Percent) 35 &gt; and
							if{
								3276 (>K:THROTTLE1_SET)
							}

						(A:GENERAL ENG2 THROTTLE LEVER POSITION, Percent) 20 &lt;
						(A:TURB ENG2 N2, Percent) 35 &gt; and
							if{
								3276 (>K:THROTTLE2_SET)
							}

						(A:GENERAL ENG1 THROTTLE LEVER POSITION, Percent) 70 &gt;
						(A:TURB ENG N2:1, Percent) 96 &lt; and
							if{
								11468 (>K:THROTTLE_70)
							}

						(A:GENERAL ENG1 THROTTLE LEVER POSITION, Percent) 70 &gt;
						(A:TURB ENG N2:1, Percent) 96 &lt; and
							if{
								11468 (>K:THROTTLE2_SET)
							}
					</Value>
				</Select>
			</Element>
			<Element Name="ENG AVAIL">
				<Select>
					<Value>
						(A:TURB ENG1 N2, Percent) 25 &gt;
							if{
								1 (>L:ENG1_AVAIL)
							}
							els{
								0 (>L:ENG1_AVAIL)
							}

						(A:TURB ENG2 N2, Percent) 25 &gt;
							if{
								1 (>L:ENG2_AVAIL)
							}
							els{
								0 (>L:ENG2_AVAIL)
							}

						(L:ENG1_AVAIL) 1 ==
						(L:ENG2_AVAIL) 1 == and
							if{
								1 (>L:ENG_AVAIL)
							}
							els{
								0 (>L:ENG_AVAIL)
							}
					</Value>
				</Select>
			</Element>
			<Element Name="ENG1 FUEL FEED">
				<Element>
					<Select>
						<Value>
							(L:SW1_FS_THROT_L) 1 ==
							(L:BTN_FS_FIRE_LENG_EXEC) 0 == and
							(L:FUEL_L_INIT) 0 == and
								if{
									1000 (>K:MIXTURE1_SET)
									1 (>L:FUEL_L_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:SW1_FS_THROT_L) 0 ==
							(L:BTN_FS_FIRE_LENG_EXEC) 1 == or
							(L:FUEL_L_INIT) 1 == and
								if{
									0 (>K:MIXTURE1_SET)
									0 (>L:FUEL_L_INIT)
									0 (>L:SW1_FS_THR_L_FING)
									0 (>L:BTN_FS_FIRE_LENG_EXEC)
								}
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="ENG2 FUEL FEED">
				<Element>
					<Select>
						<Value>
							(L:SW1_FS_THROT_R) 1 ==
							(L:BTN_FS_FIRE_RENG_EXEC) 0 == and
							(L:FUEL_R_INIT) 0 == and
								if{
									1000 (>K:MIXTURE2_SET)
									1 (>L:FUEL_R_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:SW1_FS_THROT_R) 0 ==
							(L:BTN_FS_FIRE_RENG_EXEC) 1 == or
							(L:FUEL_R_INIT) 1 == and
								if{
									0 (>K:MIXTURE2_SET)
									0 (>L:FUEL_R_INIT)
									0 (>L:SW1_FS_THR_R_FING)
									0 (>L:BTN_FS_FIRE_RENG_EXEC)
								}
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="ENG1 MASTER">
				<Element>
					<Select>
						<Value>
							(L:SW1_FS_ENG_MASTER_L) 1 ==
							(L:SW1_FS_ENG_CONT_L) 1 == and
							(L:ENG_CONT_ESS_DC_BUS_AVAIL) 1 == and
							(A:GENERAL ENG FUEL VALVE:1, bool) 0 == and
								if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:SW1_FS_ENG_MASTER_L) 0 ==
							(L:SW1_FS_ENG_CONT_L) 1 == and
							(L:ENG_CONT_ESS_DC_BUS_AVAIL) 1 == and
							(A:GENERAL ENG FUEL VALVE:1, bool) 1 == and
								if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="ENG2 MASTER">
				<Element>
					<Select>
						<Value>
							(L:SW1_FS_ENG_MASTER_R) 1 ==
							(L:SW1_FS_ENG_CONT_R) 1 == and
							(L:ENG_CONT_ESS_DC_BUS_AVAIL) 1 == and
							(A:GENERAL ENG FUEL VALVE:2, bool) 0 == and
								if{ (>K:TOGGLE_FUEL_VALVE_ENG2) }
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:SW1_FS_ENG_MASTER_R) 0 ==
							(L:SW1_FS_ENG_CONT_R) 1 == and
							(L:ENG_CONT_ESS_DC_BUS_AVAIL) 1 == and
							(A:GENERAL ENG FUEL VALVE:2, bool) 1 == and
								if{ (>K:TOGGLE_FUEL_VALVE_ENG2) }
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="ENG OVSP">
				<Element>
					<Select>
						<Value>
							(A:TURB ENG N2:1, Percent) 110 &gt;
							(L:L_ENG_OVSP_DET_PWR) 1 == and
							(L:ENG_CONT_ESS_DC_BUS_AVAIL) 1 == and
								if{}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(A:TURB ENG N2:2, Percent) 110 &gt;
							(L:R_ENG_OVSP_DET_PWR) 1 == and
							(L:ENG_CONT_ESS_DC_BUS_AVAIL) 1 == and
								if{}
						</Value>
					</Select>
				</Element>
			</Element>
		</Element>
	</Element>

	<Element Name="SWITCH">
		<Element Name="EXTERNAL POWER SWITCH">
    		<Select>
      			<Value>
					(L:SW2_FS_ENG_EXT_PWR) 2 ==
					(L:SW_EXT_PWR_INIT) 0 == and
						if{
							(P:LOCAL TIME, Seconds) (>L:SW_EXT_PWR-TIME, Seconds)
							1 (>L:SW_EXT_PWR_INIT)
						}

					(L:SW2_FS_ENG_EXT_PWR) 2 ==
					(P:LOCAL TIME, Seconds) (L:SW_EXT_PWR-TIME, Seconds) - 1 &gt; and
						if{
							1 (>L:SW2_FS_ENG_EXT_PWR)
							0 (>L:SW_EXT_PWR-TIME, Seconds)
							0 (>L:SW_EXT_PWR_INIT)
						}
      			</Value>
    		</Select>
		</Element>
		<Element Name="CAS SWITCHS">
    		<Select>
      			<Value>
					(L:SW2_FS_CAS_PITCH) 1 ==
					(L:SW_CAS_PIT_INIT) 0 == and
						if{
							(P:LOCAL TIME, Seconds) (>L:SW_CAS_PIT-TIME, Seconds)
							1 (>L:SW_CAS_PIT_INIT)
						}

					(L:SW2_FS_CAS_PITCH) 1 ==
					(P:LOCAL TIME, Seconds) (L:SW_CAS_PIT-TIME, Seconds) - 1 &gt; and
						if{
							2 (>L:SW2_FS_CAS_PITCH)
							0 (>L:SW_CAS_PIT-TIME, Seconds)
							0 (>L:SW_CAS_PIT_INIT)
						}

					(L:SW2_FS_CAS_ROLL) 1 ==
					(L:SW_CAS_ROL_INIT) 0 == and
						if{
							(P:LOCAL TIME, Seconds) (>L:SW_CAS_ROL-TIME, Seconds)
							1 (>L:SW_CAS_ROL_INIT)
						}

					(L:SW2_FS_CAS_ROLL) 1 ==
					(P:LOCAL TIME, Seconds) (L:SW_CAS_ROL-TIME, Seconds) - 1 &gt; and
						if{
							2 (>L:SW2_FS_CAS_ROLL)
							0 (>L:SW_CAS_ROL-TIME, Seconds)
							0 (>L:SW_CAS_ROL_INIT)
						}

					(L:SW2_FS_CAS_YAW) 1 ==
					(L:SW_CAS_YAW_INIT) 0 == and
						if{
							(P:LOCAL TIME, Seconds) (>L:SW_CAS_YAW-TIME, Seconds)
							1 (>L:SW_CAS_YAW_INIT)
						}

					(L:SW2_FS_CAS_YAW) 1 ==
					(P:LOCAL TIME, Seconds) (L:SW_CAS_YAW-TIME, Seconds) - 1 &gt; and
						if{
							2 (>L:SW2_FS_CAS_YAW)
							0 (>L:SW_CAS_YAW-TIME, Seconds)
							0 (>L:SW_CAS_YAW_INIT)
						}
      			</Value>
    		</Select>
		</Element>
		<Element Name="EMERGENCY BRAKE CONTROLLER">
    		<Select>
      			<Value>
					(L:SW1_FS_EMER_BRAKE) 1 ==
						if{
							(A:ANTISKID BRAKES ACTIVE, bool) 1 ==
								if{
									(>K:ANTISKID_BRAKES_TOGGLE)
								}
							(L:JFS_ACCUM_1) 0 &gt;
								if{
									(L:JFS_ACCUM_1) (A:AIRSPEED INDICATED, KNOTS) 0.01 * -  (>L:JFS_ACCUM_1)
								}
							(A:BRAKE PARKING INDICATOR, bool) 0 ==
								if{
									(>K:PARKING_BRAKES)
								}
						}
      			</Value>
    		</Select>
		</Element>
		<Element Name="EMERGENCY GEAR CONTROLLER">
    		<Select>
      			<Value>
					(L:SW1_FS_EMER_GEAR) 1 ==
					(L:EMER_GEAR_INIT) 0 == and
						if{
							1 (>K:GEAR_DOWN, NUMBER) 1 (>L:EMER_GEAR_INIT)
						}
      			</Value>
    		</Select>
		</Element>
		<Element Name="EMERGENCY JETTION CONTROLLER">
    		<Select>
      			<Value>
					(L:BTN_FS_EMER_JETT_EXEC) 1 ==
					(L:EMER_JETT_PWR) 1 == and
					(L:EMER_JETT_BTN_INIT) 0 == and
						if{
							1 (>L:EMER_JETT_BTN_INIT)
							(P:LOCAL TIME, Seconds) (>L:EMER_JETT-TIME, Seconds)
						}

					(P:LOCAL TIME, Seconds) (L:EMER_JETT-TIME, Seconds) - 0.1 &gt;
					(L:EMER_JETT_BTN_INIT) 1 == and
						if{
							0 (>L:BTN_FS_EMER_JETT_EXEC)
							0 (>L:EMER_JETT-TIME, Seconds)
							0 (>L:EMER_JETT_BTN_INIT)
						}
					(L:BTN_FS_EMER_JETT_EXEC) 0 ==
					(L:EMER_JETT_BTN_INIT) 1 == and
						if{
							0 (>L:BTN_FS_EMER_JETT_EXEC)
							0 (>L:EMER_JETT-TIME, Seconds)
							0 (>L:EMER_JETT_BTN_INIT)
						}
      			</Value>
    		</Select>
		</Element>
		<Element Name="EMERGENCY VENT CONTROLLER">
    		<Select>
      			<Value>
					(L:SW1_FS_EMER_VENT) 1 ==
						if{
						}
      			</Value>
    		</Select>
		</Element>
		<Element Name="EMERGENCY RF DOOR CONTROLLER">
    		<Select>
      			<Value>
					(L:SW1_FS_EAR) 1 ==
					(L:EMER_EAR_INIT) 0 == and
						if{
							1 (>L:RF_DOOR_VIS)
							1 (>L:RF_DOOR_AUD)
							1 (>L:EMER_EAR_INIT)
						}
      			</Value>
    		</Select>
		</Element>
		<Element Name="CANOPY EJECTION CONTROLLER">
			<Select>
				<Value>
				(L:SW1_FS_EMER_CANOPY) 1 ==
				(L:FS_SEAT_PIN) 0 == and
				(L:CANOPY_JETTISON_INIT) 0 == and
					if{
						1 (>L:CANOPY_VIS)
						1 (>L:CANOPY_JETTISON_SND)
						1 (>L:CANOPY_JETTISON_INIT)
					}
				</Value>
			</Select>
		</Element>

		<Element Name="FLAPS BLOW-IN CONTROLLER">
			<Element>
				<Select>
					<Value>
						(L:FLAPS_PWR) 1 ==
						(L:SW1_FLAPS) 0 == and
						(A:AIRSPEED INDICATED, Knots) 250 &lt; and
						(L:FLAPS_DOWN_INIT) 0 == and
							if{
									(>K:FLAPS_DOWN)
								0 	(>L:FLAPS_DOWN_INIT2)
								1 	(>L:FLAPS_DOWN_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:FLAPS_PWR) 1 ==
						(L:SW1_FLAPS) 1 == and
						(L:FLAPS_DOWN_INIT) 1 == and
							if{
									(>K:FLAPS_UP)
								0 	(>L:FLAPS_DOWN_INIT)
								0 	(>L:FLAPS_DOWN_INIT2)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:FLAPS_PWR) 1 ==
						(L:SW1_FLAPS) 0 == and
						(A:AIRSPEED INDICATED, Knots) 250 &gt; and
						(L:FLAPS_DOWN_INIT2) 0 == and
							if{
									(>K:FLAPS_UP)
								1 	(>L:FLAPS_DOWN_INIT2)
								0 	(>L:FLAPS_DOWN_INIT)
							}
					</Value>
				</Select>
			</Element>
		</Element>
		<Element Name="WEAPON JETT">
    		<Select>
      			<Value>
					(L:BTN_FS_WEP_JETT_EXEC) 1 ==
					(L:JETT_BTN_INIT) 0 == and
						if{
							1 (>L:JETT_BTN_INIT)
							(P:LOCAL TIME, Seconds) (>L:WEP_JETT-TIME, Seconds)

							(A:SIM ON GROUND) !
							(A:GEAR TOTAL PCT EXTENDED, Percent) 0 == and
								if{
									1 (>L:JETT_EXEC)
								}
						}

					(P:LOCAL TIME, Seconds) (L:WEP_JETT-TIME, Seconds) - 1 &gt;
					(L:JETT_BTN_INIT) 1 == and
						if{
							0 (>L:BTN_FS_EMER_JETT_EXEC)
							0 (>L:WEP_JETT-TIME, Seconds)
							0 (>L:JETT_BTN_INIT)
						}

						(L:BTN_FS_EMER_JETT_EXEC) 0 ==
						(L:JETT_BTN_INIT) 1 == and
						if{
							0 (>L:BTN_FS_WEP_JETT_EXEC)
							0 (>L:WEP_JETT-TIME, Seconds)
							0 (>L:JETT_BTN_INIT)
						}
					}
      			</Value>
    		</Select>
		</Element>

		<Element Name="HOOK">
    		<Select>
      			<Value>
					(L:SW1_FS_HOOK) 1 ==
						if{
							(A:TAILHOOK POSITION, Percent) 0 ==
							if{
								(>K:TOGGLE_TAIL_HOOK_HANDLE)
							}
						}
						els{
							(A:TAILHOOK POSITION, Percent) 100 ==
							if{
								(>K:TOGGLE_TAIL_HOOK_HANDLE)
							}
						}
      			</Value>
    		</Select>
		</Element>

		<Element Name="ARMT STA SEL">
			<Element>
				<Select>
					<Value>
						(L:BTN_FS_ARAM_STR2_SEL_EXEC) 1 ==
							if{
								0 (>L:BTN_FS_ARAM_STR2_SEL_EXEC)
								(L:SELECTED_STA2) 0 ==
								if{ 1 (>L:SELECTED_STA2) }
								els{ 0 (>L:SELECTED_STA2) }
							}
						(L:BTN_FS_ARAM_STR5_SEL_EXEC) 1 ==
							if{
								0 (>L:BTN_FS_ARAM_STR5_SEL_EXEC)
								(L:SELECTED_STA5) 0 ==
								if{ 1 (>L:SELECTED_STA5) }
								els{ 0 (>L:SELECTED_STA5) }
							}
						(L:BTN_FS_ARAM_STR8_SEL_EXEC) 1 ==
							if{
								0 (>L:BTN_FS_ARAM_STR8_SEL_EXEC)
								(L:SELECTED_STA8) 0 ==
								if{ 1 (>L:SELECTED_STA8) }
								els{ 0 (>L:SELECTED_STA8) }
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
					(L:SW1_FS_LASER) 0 ==
					(L:LASER_INIT) 1 == and
						if{
							0 (>L:CAGE SWITCH) 0 (>L:LASER_INIT)
						}
					</Value>
				</Select>
			</Element>
		</Element>
		<Element Name="MASTER ARM">
			<Select>
				<Value>
					(L:SW1_FS_MASTER_ARM) 1 ==
					(L:SW1_FS_MASTER_ARM_INIT) 0 == and
					(A:SIM ON GROUND, bool) ! and
					(A:GEAR TOTAL PCT EXTENDED, Percent) 0 == and
					(L:AA_MASTER_ARM_PWR) 1 == and
					(L:AG_MASTER_ARM_PWR) 1 == and
						if{
							1 (>L:MASTER_ARM)
							1 (>L:SW1_FS_MASTER_ARM_INIT)
							1 (>L:ARM SWITCH)
						}

					(L:SW1_FS_MASTER_ARM) 0 ==
					(L:SW1_FS_MASTER_ARM_INIT) 1 == and
						if{
							0 (>L:MASTER_ARM)
							0 (>L:SW1_FS_MASTER_ARM_INIT)
							0 (>L:ARM SWITCH)
						}
				</Value>
			</Select>
		</Element>

		<Element Name="HUD STEER MODE">
			<Select>
				<Value>
					(L:KNOB_FS_STEER_MODE) 0 ==
						if{
							0 (>L:HSI_MODE)
						}
					(L:KNOB_FS_STEER_MODE) 1 ==
						if{
							2 (>L:HSI_MODE)
						}
					(L:KNOB_FS_STEER_MODE) 2 ==
						if{
							3 (>L:HSI_MODE)
						}
					(L:KNOB_FS_STEER_MODE) 3 ==
						if{
							4 (>L:HSI_MODE)
						}
				</Value>
			</Select>
		</Element>

		<Element Name="JFS LEVER">
    		<Select>
      			<Value>
					(L:SW2_FS_JFS_LEVER) 1 ==
					(L:SW2_FS_JFS_LEVER) 2 == or
					(L:JFS_KNOB_INIT) 0 == and
						if{
							1 (>L:JFS_KNOB_INIT)
							(P:LOCAL TIME, Seconds) (>L:JFS_KNOB-TIME, Seconds)
						}


					(P:LOCAL TIME, Seconds) (L:JFS_KNOB-TIME, Seconds) - 1 &gt;
					(L:JFS_KNOB_INIT) 1 == and
						if{
							0 (>L:SW2_FS_JFS_LEVER)
							0 (>L:JFS_KNOB-TIME, Seconds)
							0 (>L:JFS_KNOB_INIT)
						}

						(L:SW2_FS_JFS_LEVER) 0 ==
						(L:JFS_KNOB_INIT) 1 == and
						if{
							0 (>L:SW2_FS_JFS_LEVER)
							0 (>L:JFS_KNOB-TIME, Seconds)
							0 (>L:JFS_KNOB_INIT)
						}



					}
      			</Value>
    		</Select>
		</Element>

 		<Element Name="TRIGGER">
			<Select>
				<Value>
					(L:IF15E_TRIGGER_ACT) 1 ==
						if{
							1 (>L:IF15E_TRIGGER_PRESS)
						}
				</Value>
			</Select>
		</Element>
	</Element>

	<Element Name="ETC">
 		<Element Name="HYD ELEV">
    		<Select>
      			<Value>
					(A:SIM ON GROUND, bool)
					(A:AIRSPEED INDICATED, Knots) 60 &lt; and
					(A:ENG1 HYDRAULIC PRESSURE, PSI)
					(A:ENG2 HYDRAULIC PRESSURE, PSI) + 2 / S5 1200 &lt; and
						if{
							L5 1600 - ABS 13.6525 * S5 6000 &lt;
								if{ 0 (>K:AXIS_ELEVATOR_SET) }
								els{ L5 (>K:AXIS_ELEVATOR_SET) }
						}
      			</Value>
    		</Select>
		</Element>
	</Element>
	<Element Name="ANNUCATOR">
		<Element Name="RUDDER LIMITTER">
			<Element Name="RUDDER TRAVEL LIMIT ENGINE">
				<Select>
					<Value>
						(L:RUDDER_TRAVEL_LMTR_PWR) 1 ==
						(L:GRD_PWR_RUD_TRVL_CAUT_PWR) 1 == and
							if{
								1 (>L:RUD_TRAVEL_LMT_ENG)
							}
							els{
								0 (>L:RUD_TRAVEL_LMT_ENG)
							}
					</Value>
				</Select>
			</Element>
			<Element Name="RUDDER LIMITTER">
				<Select>
					<Value>
						(A:AIRSPEED MACH, machs) 1.5 &gt;
						(A:RUDDER POSITION, Position) 0 ! and
						(L:RUD_TRAVEL_LMT_ENG) 0 == or
							if{
								1 (>L:RUD_LMT)
							}
							els{
								0 (>L:RUD_LMT)
							}
					</Value>
				</Select>
			</Element>
		</Element>
		<Element Name="FUEL LOW">
    		<Select>
      			<Value>
				(A:FUEL TANK CENTER2 QUANTITY, Gallons) (A:FUEL WEIGHT PER GALLON, Pounds) * 960 &lt;
				(A:FUEL TANK CENTER3 QUANTITY, Gallons) (A:FUEL WEIGHT PER GALLON, Pounds) * 540 &lt; or
				(L:FUEL_LVL_SENS_PWR) 1 == and
					if{
						1 (>L:FUEL_LOW_WARN)
					}
					els{
						0 (>L:FUEL_LOW_WARN)
					}
      			</Value>
    		</Select>
		</Element>
		<Element Name="FUEL HOT">
    		<Select>
      			<Value>
					(A:AMBIENT TEMPERATURE, Celsius) 30 &gt;
					(A:TURB ENG1 FUEL FLOW PPH, pound per hour) 1200 &lt; and
					(A:TURB ENG2 FUEL FLOW PPH, pound per hour) 1200 &lt; and
						if{ 1 (>L:FUEL_TEMP) }
						els{ 0 (>L:FUEL_TEMP) }
      			</Value>
    		</Select>
		</Element>
		<Element Name="ATTITUDE CAUTION">
    		<Select>
      			<Value>
					(L:GAU_STBY_ATT_PITCH) (L:GAU_ATT_PITCH) - (>L:ATT_PITCH)
					(L:GAU_STBY_ATT_BANK) (L:GAU_ATT_BANK) - (>L:ATT_BANK)

					(L:ATT_PITCH) -2 &lt;
					(L:ATT_PITCH) 2 &gt; or
						if{
							1 (>L:ATT_CAUT)
						}

					(L:ATT_BANK) -2 &lt;
					(L:ATT_BANK) 2 &gt; or
						if{
							1 (>L:ATT_CAUT)
						}

					(L:ATT_PITCH) -2 &gt;
					(L:ATT_PITCH) 2 &lt; and
					(L:ATT_BANK) -2 &gt; and
					(L:ATT_BANK) 2 &lt; and
						if{
							0 (>L:ATT_CAUT)
						}
		      	</Value>
    		</Select>

		</Element>
		<Element Name="INLET ICE">
    		<Select>
      			<Value>
					(A:AMBIENT TEMPERATURE, Celsius) 0 &lt;
					(A:SIM ON GROUND, bool) 1 == and
					(L:PITOT_PWR) 0 == and
					(A:STRUCTURAL ICE PCT, Percent) 50 &gt;
						if{
							1 (>L:INLET_ICE)
						}
						els{
							0 (>L:INLET_ICE)
						}
		      	</Value>
    		</Select>
		</Element>
		<Element Name="WINDSHIELD HOT">
    		<Select>
      			<Value>
					(A:TOTAL AIR TEMPERATURE, Celsius) 300 &gt;
					(L:SW1_FS_ECS_WINDSHIELD) 1 == and
						if{
							1 (>L:WINDSH_HOT)
						}
						els{
							0 (>L:WINDSH_HOT)
						}
		      	</Value>
    		</Select>
		</Element>
		<Element Name="FIRE">
			<Element Name="L ENG">
				<Element Name="FIRE INIT">
					<Select>
						<Value>
							(A:TURB ENG ITT:1, Celsius) 1000 &gt;
							(L:LENG_OVERHEAT_CUTOFF_TIME, Seconds) 0 == and
								if{
									(P:LOCAL TIME, Seconds) (>L:LENG_OVERHEAT_CUTOFF_TIME, Seconds)
								}

							(A:TURB ENG ITT:1, Celsius) 1000 &lt;
							(L:LENG_OVERHEAT_CUTOFF_TIME, Seconds) 0 &gt; and
								if{
									0 (>L:LENG_OVERHEAT_CUTOFF_TIME, Seconds)
								}
						</Value>
					</Select>
				</Element>
				<Element Name="FIRE CONT">
					<Select>
						<Value>
							(A:TURB ENG ITT:1, Celsius) 1000 &gt;
							(P:LOCAL TIME, Seconds) (L:LENG_OVERHEAT_CUTOFF_TIME, Seconds) - 30 &gt; and
								if{
									1 (>L:LENG_OVERHEATED)
									1 (>L:L_ENG_FIRE)
								}

						</Value>
					</Select>
				</Element>
				<Element Name="FIRE EXT">
					<Select>
						<Value>
							(L:BTN_FS_FIRE_RENG_EXEC) 1 ==
							(L:ENG_FIRE_EXT_SYS_PWR) 1 == and
							(L:SW2_FS_FIRE_DISCHARGE) 0 ==	and
							(A:ENG ON FIRE:1, bool) 1 == and
							(L:L_ENG_FIRE) 1 == and
								if{
									0 (>L:BTN_FS_FIRE_LENG_EXEC)
									0 (>L:LENG_OVERHEATED)
									0 (>L:L_ENG_FIRE)
									0 (>L:L_FIRE_ALARM)
									0 (>L:LENG_FIRE_ON)
									(>K:TOGGLE_FUEL_VALVE_ENG1)
									11 (>K:EXTINGUISH_ENGINE_FIRE)
								}
						</Value>
					</Select>
				</Element>
				<Element Name="SHUT DOWN">
					<Select>
						<Value>
							(L:L_ENG_FIRE) 1 ==
								if{ (A:ENG COMBUSTION:1) 1 ==
									if{ (>K:TOGGLE_ENGINE1_FAILURE) }
								}
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="R ENG">
				<Element Name="FIRE INIT">
					<Select>
						<Value>
							(A:TURB ENG ITT:2, Celsius) 1000 &gt;
							(L:RENG_OVERHEAT_CUTOFF_TIME, Seconds) 0 == and
								if{
									(P:LOCAL TIME, Seconds) (>L:RENG_OVERHEAT_CUTOFF_TIME, Seconds)
								}

							(A:TURB ENG ITT:2, Celsius) 1000 &lt;
							(L:RENG_OVERHEAT_CUTOFF_TIME, Seconds) 0 &gt; and
								if{
									0 (>L:RENG_OVERHEAT_CUTOFF_TIME, Seconds)
								}
						</Value>
					</Select>
				</Element>
				<Element Name="FIRE CONT">
					<Select>
						<Value>
							(A:TURB ENG ITT:2, Celsius) 1000 &gt;
							(P:LOCAL TIME, Seconds) (L:RENG_OVERHEAT_CUTOFF_TIME, Seconds) - 30 &gt; and
								if{
									1 (>L:RENG_OVERHEATED)
									1 (>L:R_ENG_FIRE)
								}
						</Value>
					</Select>
				</Element>
				<Element Name="FIRE EXT">
					<Select>
						<Value>
							(L:BTN_FS_FIRE_RENG_EXEC) 1 ==
							(L:ENG_FIRE_EXT_SYS_PWR) 1 == and
							(L:SW2_FS_FIRE_DISCHARGE) 0 ==	and
							(L:R_ENG_FIRE) 1 == and
								if{
									0 (>L:BTN_FS_FIRE_RENG_EXEC)
									0 (>L:RENG_OVERHEATED)
									0 (>L:R_ENG_FIRE)
									0 (>L:R_FIRE_ALARM)
									0 (>L:RENG_FIRE_ON)
									(>K:TOGGLE_FUEL_VALVE_ENG2)
									22 (>K:EXTINGUISH_ENGINE_FIRE)
								}
						</Value>
					</Select>
				</Element>
				<Element Name="SHUT DOWN">
					<Select>
						<Value>
							(L:R_ENG_FIRE) 1 ==
								if{ (A:ENG COMBUSTION:2, bool) 1 ==
									if{ (>K:TOGGLE_ENGINE2_FAILURE) }
								}
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="AMAD">
				<Element Name="FIRE INIT">
					<Select>
						<Value>
							(L:AMAD_L_COUPLE) 0 ==
							(L:AMAD_R_COUPLE) 0 == and
							(A:APU PCT RPM, Percent) 99 &gt; and
								if{
									1 (>L:AMAD_WARN)
								}
								els{
									0 (>L:AMAD_WARN)
								}
						</Value>
					</Select>
				</Element>
				<Element Name="FIRE WARN">
					<Select>
						<Value>
							(L:AMAD_WARN) 1 ==
							(L:APU_OVERHEAT_CUTOFF_TIME, Seconds) 0 == and
								if{
									(P:LOCAL TIME, Seconds) (>L:APU_OVERHEAT_CUTOFF_TIME, Seconds)
								}
							(L:AMAD_WARN) 0 ==
							(L:APU_OVERHEAT_CUTOFF_TIME, Seconds) 0 &gt; and
								if{
									0 (>L:APU_OVERHEAT_CUTOFF_TIME, Seconds)
								}
						</Value>
					</Select>
				</Element>
				<Element Name="FIRE CONT">
					<Select>
						<Value>
							(L:AMAD_WARN) 1 ==
							(P:LOCAL TIME, Seconds) (L:APU_OVERHEAT_CUTOFF_TIME, Seconds) - 60 &gt; and
								if{
									1 (>L:AMAD_FIRE)
									1 (>L:JFS_FAULT)
								}
						</Value>
					</Select>
				</Element>
				<Element Name="FIRE EXT">
					<Select>
						<Value>
							(L:BTN_FS_FIRE_AMAD_EXEC) 1 ==
							(L:SW2_FS_FIRE_DISCHARGE) 0 == and
							(L:AMAD_F_EXT_SYS_PWR) 1 == and
							(A:APU ON FIRE DETECTED, bool) 1 == and
							(L:AMAD_FIRE) 1 == and
								if{
									0 (>L:AMAD_FIRE)
									0 (>L:BTN_FS_FIRE_AMAD_EXEC)
									3 (>K:APU_EXTINGUISH_FIRE)
								}
						</Value>
					</Select>
				</Element>
			</Element>
		</Element>
	</Element>

   	<Element Name="EFFECTS">
		<Element Name="AFTERBURNER CONTROLLER">
			<Select>
				<Value>
					(A:GENERAL ENG COMBUSTION:1) 1 ==
					(A:GENERAL ENG THROTTLE LEVER POSITION:1, Percent) 83 &gt; and
					(L:L_AB_INIT) 0 == and
						if{
							(A:TURB ENG AFTERBURNER:1) 0 ==
							if{
								(>K:TOGGLE_AFTERBURNER1)
								1 (>L:L_AB_INIT)
							}
						}

					(A:GENERAL ENG COMBUSTION:1) 0 ==
					(A:GENERAL ENG THROTTLE LEVER POSITION:1, Percent) 83 &lt; or
					(L:L_AB_INIT) 1 == and
						if{
							(A:TURB ENG AFTERBURNER:1) 1 ==
							if{
								(>K:TOGGLE_AFTERBURNER1)
								0 (>L:L_AB_INIT)
							}
						}

					(A:GENERAL ENG COMBUSTION:2) 1 ==
					(A:GENERAL ENG THROTTLE LEVER POSITION:2, Percent) 83 &gt; and
					(L:R_AB_INIT) 0 == and
						if{
							(A:TURB ENG AFTERBURNER:2) 0 ==
							if{
								(>K:TOGGLE_AFTERBURNER2)
								1 (>L:R_AB_INIT)
							}
						}

					(A:GENERAL ENG COMBUSTION:2) 0 ==
					(A:GENERAL ENG THROTTLE LEVER POSITION:2, Percent) 83 &lt; or
					(L:R_AB_INIT) 1 == and
							if{
								(A:TURB ENG AFTERBURNER:2) 1 ==
								if{
									(>K:TOGGLE_AFTERBURNER2)
									0 (>L:R_AB_INIT)
								}
							}
				</Value>
			</Select>
		</Element>
		<Element Name="AFTERBURNER">
			<Select>
				<Value>
					(A:GENERAL ENG THROTTLE LEVER POSITION:1, Percent) 80 &gt;
					(A:TURB ENG N2:1, Percent) 70 &gt; and

						if{ (A:LIGHT RECOGNITION, bool) !
							if{ (&gt;K:TOGGLE_RECOGNITION_LIGHTS) }
						}
						els{ (A:LIGHT RECOGNITION, bool)
							if{ (&gt;K:TOGGLE_RECOGNITION_LIGHTS) }
						}

					(A:GENERAL ENG THROTTLE LEVER POSITION:2, Percent) 80 &gt;
					(A:TURB ENG N2:2, Percent) 70 &gt; and

						if{ (A:LIGHT WING, bool) !
							if{ (&gt;K:TOGGLE_WING_LIGHTS) }
						}
						els{ (A:LIGHT WING, bool)
							if{ (&gt;K:TOGGLE_WING_LIGHTS) }
				</Value>
			</Select>
		</Element>
		<Element Name="COUNTERMEASURES SYSTEM">
			<Element Name="CMS GO CONDITION">
				<Select>
					<Value>
						(L:LOGIC_PWR) 1 ==
						(L:MASTER_ARM) 1 == and
						(L:SW1_RS_CMD_FLARE_JETT) 0 == and
						(L:KNOB_RS_CMD_MODE) 3 == and
						(L:CMD_PRGMR_PWR) 1 == and
							if{
								1 (>L:CMS_RDY)
							}
					</Value>
				</Select>
			</Element>
			<Element Name="CMS ACTIVE TIMER">
				<Select>
					<Value>
						(L:CMS_GO) 1 ==
						(L:CMS_TIME, Seconds) 0 == and
							if{
								(P:ABSOLUTE TIME, Seconds) (>L:CMS_TIME, Seconds)
							}

						(L:CMS_GO) 1 ==
						(P:ABSOLUTE TIME, Seconds) (L:CMS_TIME, Seconds) - 1.5 &gt; and
							if{
								0 (>L:CMS_RDY) 0 (>L:CMS_GO) 0 (>L:CMS_TIME, Seconds)
							}
					</Value>
				</Select>
			</Element>
			<Element Name="CMS FLARE LAUNCH">
				<Select>
					<Value>
						(L:CMS_RDY) 1 ==
						(A:G FORCE,GFORCE) 2 &gt; and
						(A:SMOKE ENABLE, bool) 0 == and
						(L:CMS_GO_INIT) 0 == and
							if{
								(>K:SMOKE_ON)
								1 (>L:CMS_GO)
								1 (>L:CMS_GO_INIT)
								(L:CHAFF_COUNT) + 4 - (>L:CHAFF_COUNT)
								(L:FLARE_COUNT) + 2 - (>L:FLARE_COUNT)
							}

						(L:CMS_RDY) 0 ==
						(A:G FORCE,GFORCE) 2 &lt; or
						(L:CMS_GO_INIT) 1 == and
							if{
								(>K:SMOKE_OFF)
								0 (>L:CMS_GO_INIT)
							}
					</Value>
				</Select>
			</Element>
		</Element>
		<Element Name="GUN">
			<Select>
				<Value>
					(L:GUN_RUN) 2 ==
						if{ (A:LIGHT LOGO, bool) !
							if{ (&gt;K:TOGGLE_LOGO_LIGHTS) }
						}
						els{ (A:LIGHT LOGO, bool)
							if{ (&gt;K:TOGGLE_LOGO_LIGHTS) }
						}
				</Value>
			</Select>
		</Element>
	</Element>
	<Element Name="AUDIO SYSTEM">
		<Element Name="AVIONICS POWER AUDIO">
			<Element>
				<Select>
					<Value>
						(L:MPCD-POWER) 1 ==
						(L:AVIONICS_PWR_INIT) 0 == and
							if{
								2 (>L:AVIONICS_PWR)
								1 (>L:AVIONICS_PWR_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:MPCD-POWER) 0 ==
						(L:AVIONICS_PWR_INIT) 1 == and
							if{
								0 (>L:AVIONICS_PWR)
								0 (>L:AVIONICS_PWR_INIT)
							}
					</Value>
				</Select>
			</Element>
		</Element>
		<Element Name="GEAR WARN">
			<Element>
				<Select>
					<Value>
						(L:LIGHT_FLICKER) 1 ==
						(L:LDG_GR_POS_WRN_TONE_PWR) 1 == and
						(A:SIM ON GROUND, bool) 0 == and
						(A:TRAILING EDGE FLAPS LEFT Percent, Percent) 100 == and
						(A:GEAR CENTER POSITION, Percent) 100 != and
						(L:GEAR_WARN_MUTE) 0 == and
							if{ 2 (>L:GEAR_WARN) }
							els{ 0 (>L:GEAR_WARN) }
					</Value>
				</Select>
			</Element>
			<Element Name="MUTE AUDIO">
				<Select>
					<Value>
						(L:BTN_FS_GEAR_WARN_EXEC) 1 ==
						(L:GEAR_WARN_TIME, Seconds) 0 == and
							if{
								(P:ABSOLUTE TIME, Seconds) (>L:GEAR_WARN_TIME, Seconds) 1 (>L:GEAR_WARN_MUTE) 0 (>L:BTN_FS_GEAR_WARN_EXEC)
							}
					</Value>
				</Select>
			</Element>
			<Element Name="MUTED FOR 1 MINUTES THEN RESET SYSTEM">
				<Select>
					<Value>
						(L:GEAR_WARN_MUTE) 1 ==
						(P:ABSOLUTE TIME, Seconds) (L:GEAR_WARN_TIME, Seconds) - 60 &gt; and
							if{
								0 (>L:GEAR_WARN_MUTE) 0 (>L:GEAR_WARN_TIME, Seconds)
							}
					</Value>
				</Select>
			</Element>
		</Element>

		<Element Name="FIRE TEST">
			<Element>
				<Select>
					<Value>
						(L:LIGHT_FLICKER) 1 ==
						(L:SW2_FS_FIRE_DISCHARGE) 2 == and
						(L:FIRE_TEST_INIT) 0 == and
							if{ 1 (>L:FIRE_TEST) 1 (>L:FIRE_TEST_INIT) }
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:SW2_FS_FIRE_DISCHARGE) 2 !=
						(L:FIRE_TEST_INIT) 1 == and
							if{ 0 (>L:FIRE_TEST) 0 (>L:FIRE_TEST_INIT) }
					</Value>
				</Select>
			</Element>
		</Element>
		<Element Name="AOA">
			<Element Name="AOA FACTOR 0 WARN">
				<Select>
					<Value>
						(A:INCIDENCE ALPHA, degrees) 30 &gt;
						(A:INCIDENCE ALPHA, degrees) 35 &lt; and
						(A:GEAR HANDLE POSITION, bool) 0 == and
						(L:VMS_ENABLE) 1 == and
						(L:AOA_FACTOR_0_INIT) 0 == and
							if{
								2 (>L:AOA_FACTOR_0)
								1 (>L:AOA_FACTOR_0_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(A:INCIDENCE ALPHA, degrees) 30 &lt;
						(A:INCIDENCE ALPHA, degrees) 35 &gt; or
						(L:VMS_ENABLE) 0 == or
						(L:AOA_FACTOR_0_INIT) 1 == and
							if{
								0 (>L:AOA_FACTOR_0)
								0 (>L:AOA_FACTOR_0_INIT)
							}
					</Value>
				</Select>
			</Element>

			<Element Name="AOA FACTOR 1 WARN">
				<Select>
					<Value>
						(A:INCIDENCE ALPHA, degrees) 35 &gt;
						(A:INCIDENCE ALPHA, degrees) 40 &lt; and
						(A:GEAR HANDLE POSITION, bool) 0 == and

						(L:VMS_ENABLE) 1 == and
						(L:AOA_FACTOR_1_INIT) 0 == and
							if{
								2 (>L:AOA_FACTOR_1)
								1 (>L:AOA_FACTOR_1_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(A:INCIDENCE ALPHA, degrees) 35 &lt;
						(A:INCIDENCE ALPHA, degrees) 40 &gt; or
						(L:VMS_ENABLE) 0 == or
						(L:AOA_FACTOR_1_INIT) 1 == and
							if{
								0 (>L:AOA_FACTOR_1)
								0 (>L:AOA_FACTOR_1_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element Name="AOA FACTOR 2 WARN">
				<Select>
					<Value>
						(A:INCIDENCE ALPHA, degrees) 40 &gt;
						(A:GEAR HANDLE POSITION, bool) 0 == and

						(L:VMS_ENABLE) 1 == and
						(L:AOA_FACTOR_2_INIT) 0 == and
							if{
								2 (>L:AOA_FACTOR_2)
								1 (>L:AOA_FACTOR_2_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(A:INCIDENCE ALPHA, degrees) 40 &lt;
						(L:VMS_ENABLE) 0 == or
						(L:AOA_FACTOR_2_INIT) 1 == and
							if{
								0 (>L:AOA_FACTOR_2)
								0 (>L:AOA_FACTOR_2_INIT)
							}
					</Value>
				</Select>
			</Element>
		</Element>
		<Element Name="AIRCON">
			<Element Name="AIRCON INIT">
				<Select>
					<Value>
						(L:SUPPLY_ON) 1 ==
						(L:SUPPLY_ON_TIME, Seconds) 0 == and
							if{
								(P:LOCAL TIME, Seconds) (>L:SUPPLY_ON_TIME, Seconds)
								1 (>L:SUPPLY_START)
							}

						(L:SUPPLY_ON) 0 ==
						(L:SUPPLY_ON_TIME, Seconds) 0 &gt; and
							if{
								0 (>L:SUPPLY_ON_TIME, Seconds)
								0 (>L:SUPPLY_START)
							}
					</Value>
				</Select>
			</Element>
			<Element Name="AIRCON RUN">
				<Select>
					<Value>
						(L:SUPPLY_ON) 1 ==
						(P:LOCAL TIME, Seconds) (L:SUPPLY_ON_TIME, Seconds) - 1.5 &gt; and
							if{
								2 (>L:SUPPLY_RUN)
								0 (>L:SUPPLY_START)
							}

						(L:SUPPLY_MAN_ON) 1 ==
						(L:KNOB_FS_AIRCON_TEMP) 6 == and
							if{
								2 (>L:SUPPLY_MAX)
							}
							els{
								0 (>L:SUPPLY_MAX)
							}
					</Value>
				</Select>
			</Element>

			<Element Name="AIRCON OFF">
				<Select>
					<Value>
						(L:SUPPLY_START) 1 == (L:SUPPLY_RUN) 2 == or
						(L:SUPPLY_ON) 0 == and
							if{
								1 (>L:SUPPLY_STOP)
								0 (>L:SUPPLY_RUN)
							}
					</Value>
				</Select>
			</Element>
		</Element>
		<Element Name="TEWS CONTROL" >
			<Element Name="GPS MODE (FICTIONAL)">
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 1 ==
							(L:RWR_AC_PWR) 1 == and
							(L:VMS_MUTE) 0 == and
							(L:KNOB_FS_AUD_TEWS_CAUT) 0 != and
							(A:GPS IS ACTIVE FLIGHT PLAN, bool) 1 == and
							(A:GPS WP DISTANCE,NMILES) 20 &lt; and
							(L:TEWS_30_INIT) 0 == and
								if{
									2 (>L:TEWS_30) 1 (>L:TEWS_30_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 0 ==
							(L:RWR_AC_PWR) 0 == or
							(L:VMS_MUTE) 1 == or
							(L:KNOB_FS_AUD_TEWS_CAUT) 0 == or
							(A:GPS WP DISTANCE,NMILES) 20 &gt; or
							(A:GPS IS ACTIVE FLIGHT PLAN, bool) 0 == or
							(L:TEWS_30_INIT) 1 == and
								if{
									0 (>L:TEWS_30) 0 (>L:TEWS_30_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 1 ==
							(L:RWR_AC_PWR) 1 == and
							(L:VMS_MUTE) 0 == and
							(L:KNOB_FS_AUD_TEWS_CAUT) 0 != and
							(A:GPS IS ACTIVE FLIGHT PLAN, bool) 1 == and
							(A:GPS WP DISTANCE,NMILES) 15 &lt; and
							(L:TEWS_10_INIT) 0 == and
								if{
									1 (>L:TEWS_10) 1 (>L:TEWS_10_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 0 ==
							(L:RWR_AC_PWR) 0 == or
							(L:VMS_MUTE) 1 == or
							(L:KNOB_FS_AUD_TEWS_CAUT) 0 == or
							(A:GPS WP DISTANCE,NMILES) 15 &gt; or
							(A:GPS IS ACTIVE FLIGHT PLAN, bool) 0 == or
							(L:TEWS_10_INIT) 1 == and
								if{
									0 (>L:TEWS_10_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 1 ==
							(L:RWR_AC_PWR) 1 == and
							(L:VMS_MUTE) 0 == and
							(L:KNOB_FS_AUD_TEWS_CAUT) 0 != and
							(A:GPS IS ACTIVE FLIGHT PLAN, bool) 1 == and
							(A:GPS WP DISTANCE,NMILES) 10 &lt; and
							(L:TEWS_5_INIT) 0 == and
								if{
									1 (>L:TEWS_5) 1 (>L:TEWS_5_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 0 ==
							(L:RWR_AC_PWR) 0 == or
							(L:VMS_MUTE) 1 == or
							(L:KNOB_FS_AUD_TEWS_CAUT) 0 == or
							(A:GPS IS ACTIVE FLIGHT PLAN, bool) 0 == or
							(A:GPS WP DISTANCE,NMILES) 10 &gt; or
							(L:TEWS_5_INIT) 1 == and
								if{
									0 (>L:TEWS_5_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 1 ==
							(L:RWR_AC_PWR) 1 == and
							(L:VMS_MUTE) 0 == and
							(L:KNOB_FS_AUD_TEWS_CAUT) 0 != and
							(A:GPS IS ACTIVE FLIGHT PLAN, bool) 1 == and
							(A:GPS WP DISTANCE,NMILES) 5 &lt; and
							(A:GPS WP DISTANCE,NMILES) 4.5 &gt; and
							(L:TEWS_2_INIT) 0 == and
								if{
									2 (>L:TEWS_2) 1 (>L:TEWS_5) 1 (>L:TEWS_2_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 0 ==
							(L:RWR_AC_PWR) 0 == or
							(L:VMS_MUTE) 1 == or
							(L:KNOB_FS_AUD_TEWS_CAUT) 0 == or
							(A:GPS IS ACTIVE FLIGHT PLAN, bool) 0 == or
							(A:GPS WP DISTANCE,NMILES) 5 &gt; or
							(A:GPS WP DISTANCE,NMILES) 4.5 &lt; or
							(L:TEWS_2_INIT) 1 == and
								if{
									0 (>L:TEWS_2) 0 (>L:TEWS_5) 0 (>L:TEWS_2_INIT)
								}
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="AIR INTERCEPT MODE">
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 1 ==
							(L:INTERCEPT) 1 == and
							(L:RWR_AC_PWR) 1 == and
							(L:VMS_MUTE) 0 == and
							(L:RDR_TEWS_30_INIT) 0 == and
								if{
									2 (>L:TEWS_30) 1 (>L:RDR_TEWS_30_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 0 ==
							(L:INTERCEPT) 0 == or
							(L:RWR_AC_PWR) 0 == or
							(L:VMS_MUTE) 1 == or
							(L:RDR_TEWS_30_INIT) 1 == and
								if{
									0 (>L:TEWS_30) 0 (>L:RDR_TEWS_30_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 1 ==
							(L:INTERCEPT) 1 == and
							(L:RWR_AC_PWR) 1 == and
							(L:VMS_MUTE) 0 == and
							(L:RDR_TEWS_10_INIT) 0 == and
								if{
									1 (>L:TEWS_10) 1 (>L:RDR_TEWS_10_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 0 ==
							(L:INTERCEPT) 0 == or
							(L:RWR_AC_PWR) 0 == or
							(L:VMS_MUTE) 1 == or
							(L:RDR_TEWS_10_INIT) 1 == and
								if{
									0 (>L:RDR_TEWS_10_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 1 ==
							(L:INTERCEPT_5) 1 == and
							(L:RWR_AC_PWR) 1 == and
							(L:VMS_MUTE) 0 == and
							(L:RDR_TEWS_5_INIT) 0 == and
								if{
									1 (>L:TEWS_5) 1 (>L:RDR_TEWS_5_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:TEWS-POWER) 0 ==
							(L:INTERCEPT_5) 0 == or
							(L:RWR_AC_PWR) 0 == or
							(L:VMS_MUTE) 1 == or
							(L:RDR_TEWS_5_INIT) 1 == and
								if{
									0 (>L:RDR_TEWS_5_INIT)
								}
						</Value>
					</Select>
				</Element>
			</Element>
		</Element>

		<Element Name="NOZZLE CONTROL" >
			<Element>
				<Select>
					<Value>
						(L:ENG_CONT_ESS_BUS_PWR) 1 ==
						(A:GENERAL ENG COMBUSTION:1) 1 == and
						(A:GENERAL ENG THROTTLE LEVER POSITION:1, Percent) 80 &gt; and
						(L:L_NOZZLE_INIT) 0 == and
							if{
								1 (>L:NOZZLE) 1 (>L:L_NOZZLE_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(A:GENERAL ENG THROTTLE LEVER POSITION:1, Percent) 80 &lt;
						(L:L_NOZZLE_INIT) 1 == and
							if{
								0 (>L:L_NOZZLE_INIT)
							}
					</Value>
				</Select>
			</Element>

			<Element>
				<Select>
					<Value>
						(L:ENG_CONT_ESS_BUS_PWR) 1 ==
						(A:GENERAL ENG COMBUSTION:2) 1 == and
						(A:GENERAL ENG THROTTLE LEVER POSITION:2, Percent) 80 &gt; and
						(L:R_NOZZLE_INIT) 0 == and
							if{
								1 (>L:NOZZLE) 1 (>L:R_NOZZLE_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(A:GENERAL ENG THROTTLE LEVER POSITION:2, Percent) 80 &lt;
						(L:R_NOZZLE_INIT) 1 == and
							if{
								0 (>L:R_NOZZLE_INIT)
							}
					</Value>
				</Select>
			</Element>
		</Element>
		<Element Name="DEEQ CONTROL">
			<Element>
				<Select>
					<Value>
						(L:ENG_CONT_ESS_BUS_PWR) 1 ==
						(A:GENERAL ENG COMBUSTION:1) 1 == and
						(L:SW1_FS_ENG_CONT_L) 1 == and
						(L:L_DEEQ_INIT) 0 == and
							if{
								1 (>L:NOZZLE) 1 (>L:L_DEEQ_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:SW1_FS_ENG_CONT_L) 0 ==
						(L:L_DEEQ_INIT) 1 == and
							if{
								0 (>L:L_DEEQ_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:ENG_CONT_ESS_BUS_PWR) 1 ==
						(A:GENERAL ENG COMBUSTION:2) 1 == and
						(L:SW1_FS_ENG_CONT_R) 1 == and
						(L:R_DEEQ_INIT) 0 == and
							if{
								1 (>L:NOZZLE) 1 (>L:R_DEEQ_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:SW1_FS_ENG_CONT_R) 0 ==
						(L:R_DEEQ_INIT) 1 == and
							if{
								0 (>L:R_DEEQ_INIT)
							}
					</Value>
				</Select>
			</Element>
		</Element>
		<Element Name="RAMP BANG">
			<Element>
				<Select>
					<Value>
						(L:AIR_INLET_CONT_PWR) 1 ==
						(A:GENERAL ENG COMBUSTION:1) 1 == and
						(A:SIM ON GROUND, bool) 1 == and
						(L:L_RAMP_INIT) 0 == and
							if{
								1 (>L:RAMP_BANG) 1 (>L:L_RAMP_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(A:GENERAL ENG COMBUSTION:1) 0 ==
						(L:L_RAMP_INIT) 1 == and
							if{
								0 (>L:L_RAMP_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(L:AIR_INLET_CONT_PWR) 1 ==
						(A:GENERAL ENG COMBUSTION:2) 1 == and
						(A:SIM ON GROUND, bool) 1 == and
						(L:R_RAMP_INIT) 0 == and
							if{
								1 (>L:RAMP_BANG) 1 (>L:R_RAMP_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(A:GENERAL ENG COMBUSTION:2) 0 ==
						(L:R_RAMP_INIT) 1 == and
							if{
								0 (>L:R_RAMP_INIT)
							}
					</Value>
				</Select>
			</Element>
		</Element>

		<Element Name="VMS">
		<!--		VMS LVARS

		*(L:VMS_AMAD_FIRE)
		*(L:VMS_BINGO_FUEL)
		*(L:VMS_ENGINE_FIRE_LEFT)
		*(L:VMS_ENGINE_FIRE_RIGHT)
		*(L:VMS_FUEL_LOW)
		*(L:VMS_LOW_ALTITUDE)
		*(L:VMS_OVER_G) * LOOPS
		*(L:VMS_OVERTEMP_LEFT)
		*(L:VMS_OVERTEMP_RIGHT)
		-->
			<Element Name="VMS MUTE" >
				<Element>
					<Select>
						<Value>
							(L:VMS_TIME, Seconds) 0 == and
								if{
									(P:ABSOLUTE TIME, Seconds) (>L:VMS_TIME, Seconds) 1 (>L:VMS_MUTE) 0 (>L:BTN_FS_ICCP3_TEWS_LAUNCH)
								}
						</Value>
					</Select>
				</Element>
				<Element Name="IF VMS MUTED FOR 1 MINUTES THEN RESET SYSTEM">
					<Select>
						<Value>
							(L:VMS_MUTE) 1 ==
							(P:ABSOLUTE TIME, Seconds) (L:VMS_TIME, Seconds) - 60 &gt; and
								if{
									0 (>L:VMS_MUTE) 0 (>L:VMS_TIME, Seconds)
								}
						</Value>
					</Select>
				</Element>
				<Element Name="VMS SYSTEM PWR">
					<Select>
						<Value>
							(L:ICS_CONT_PWR) 1 ==
							(L:VMS_MUTE) 0 == and
								if{
									1 (>L:VMS_ENABLE)
								}
								els{
									0 (>L:VMS_ENABLE)
								}
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="BINGO FUEL WARN" >
				<Element>
					<Select>
						<Value>
							(L:FUEL_INTERNAL) (L:SETTING BNGO) &lt;

							(L:VMS_AMAD_FIRE) 0 == and
							(L:VMS_ENGINE_FIRE_LEFT) 0 == and
							(L:VMS_ENGINE_FIRE_RIGHT) 0 == and
							(L:VMS_FUEL_LOW) 0 == and
							(L:VMS_LOW_ALTITUDE) 0 == and
							(L:VMS_OVER_G) 0 == and
							(L:VMS_OVERTEMP_LEFT) 0 == and
							(L:VMS_OVERTEMP_RIGHT) 0 == and

							(L:VMS_ENABLE) 1 == and
							(L:VMS_BINGO_FUEL_INIT) 0 == and
								if{
									1 (>L:VMS_BINGO_FUEL) 1 (>L:VMS_BINGO_FUEL_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:FUEL_INTERNAL) (L:SETTING BNGO) &gt;

							(L:VMS_ENABLE) 0 == or
							(L:VMS_BINGO_FUEL_INIT) 1 == and
								if{
									0 (>L:VMS_BINGO_FUEL_INIT)
								}
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="FUEL LOW WARN">
				<Element>
					<Select>
						<Value>
							(L:FUEL_LOW_WARN) 1 ==

							(L:VMS_AMAD_FIRE) 0 == and
							(L:VMS_BINGO_FUEL) 0 == and
							(L:VMS_ENGINE_FIRE_LEFT) 0 == and
							(L:VMS_ENGINE_FIRE_RIGHT) 0 == and
							(L:VMS_LOW_ALTITUDE) 0 == and
							(L:VMS_OVER_G) 0 == and
							(L:VMS_OVERTEMP_LEFT) 0 == and
							(L:VMS_OVERTEMP_RIGHT) 0 == and

							(L:VMS_ENABLE) 1 == and
							(L:VMS_FUEL_LOW_INIT) 0 == and
								if{
									1 (>L:VMS_FUEL_LOW) 1 (>L:VMS_FUEL_LOW_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:FUEL_LOW_WARN) 0 ==

							(L:VMS_ENABLE) 0 == or
							(L:VMS_FUEL_LOW_INIT) 1 == and
								if{
									0 (>L:VMS_FUEL_LOW_INIT)
								}
						</Value>
					</Select>
				</Element>
			</Element>

			<Element Name="OVERTEMP WARN">
				<Element Name="LEFT WARN">
					<Select>
						<Value>
							(A:TURB ENG ITT:1, Celsius) 960 &gt;

							(L:VMS_AMAD_FIRE) 0 == and
							(L:VMS_BINGO_FUEL) 0 == and
							(L:VMS_ENGINE_FIRE_LEFT) 0 == and
							(L:VMS_ENGINE_FIRE_RIGHT) 0 == and
							(L:VMS_FUEL_LOW) 0 == and
							(L:VMS_LOW_ALTITUDE) 0 == and
							(L:VMS_OVER_G) 0 == and
							(L:VMS_OVERTEMP_RIGHT) 0 == and

							(L:VMS_ENABLE) 1 == and
							(L:VMS_OVERTEMP_LEFT_INIT) 0 == and
								if{
									1 (>L:VMS_OVERTEMP_LEFT) 1 (>L:VMS_OVERTEMP_LEFT_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(A:TURB ENG ITT:1, Celsius) 960 &lt;

							(L:VMS_ENABLE) 0 == or
							(L:VMS_OVERTEMP_LEFT_INIT) 1 == and
								if{
									0 (>L:VMS_OVERTEMP_LEFT_INIT)
								}
						</Value>
					</Select>
				</Element>

				<Element Name="RIGHT WARN">
					<Select>
						<Value>
							(A:TURB ENG ITT:2, Celsius) 960 &gt;

							(L:VMS_AMAD_FIRE) 0 == and
							(L:VMS_BINGO_FUEL) 0 == and
							(L:VMS_ENGINE_FIRE_LEFT) 0 == and
							(L:VMS_ENGINE_FIRE_RIGHT) 0 == and
							(L:VMS_FUEL_LOW) 0 == and
							(L:VMS_LOW_ALTITUDE) 0 == and
							(L:VMS_OVER_G) 0 == and
							(L:VMS_OVERTEMP_LEFT) 0 == and

							(L:VMS_ENABLE) 1 == and
							(L:VMS_OVERTEMP_RIGHT_INIT) 0 == and
								if{
									1 (>L:VMS_OVERTEMP_RIGHT) 1 (>L:VMS_OVERTEMP_RIGHT_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(A:TURB ENG ITT:2, Celsius) 960 &lt;

							(L:VMS_ENABLE) 0 == or
							(L:VMS_OVERTEMP_RIGHT_INIT) 1 == and
								if{
									0 (>L:VMS_OVERTEMP_RIGHT_INIT)
								}
						</Value>
					</Select>
				</Element>
			</Element>

			<Element Name="FIRE WARN">
				<Element Name="LEFT ENG">
					<Select>
						<Value>
							(L:L_ENG_FIRE) 1 ==

							(L:VMS_AMAD_FIRE) 0 == and
							(L:VMS_BINGO_FUEL) 0 == and
							(L:VMS_ENGINE_FIRE_RIGHT) 0 == and
							(L:VMS_FUEL_LOW) 0 == and
							(L:VMS_LOW_ALTITUDE) 0 == and
							(L:VMS_OVER_G) 0 == and
							(L:VMS_OVERTEMP_LEFT) 0 == and
							(L:VMS_OVERTEMP_RIGHT) 0 == and

							(L:VMS_ENABLE) 1 == and
							(L:VMS_ENGINE_FIRE_LEFT_INIT) 0 == and
								if{
									1 (>L:VMS_ENGINE_FIRE_LEFT)
									1 (>L:VMS_ENGINE_FIRE_LEFT_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:L_ENG_FIRE) 0 ==

							(L:VMS_ENABLE) 0 == or
							(L:VMS_ENGINE_FIRE_LEFT_INIT) 1 == and
								if{
									0 (>L:VMS_ENGINE_FIRE_LEFT_INIT)
								}
						</Value>
					</Select>
				</Element>

				<Element Name="RIGHT ENG">
					<Select>
						<Value>
							(L:R_ENG_FIRE) 1 ==

							(L:VMS_AMAD_FIRE) 0 == and
							(L:VMS_BINGO_FUEL) 0 == and
							(L:VMS_ENGINE_FIRE_LEFT) 0 == and
							(L:VMS_FUEL_LOW) 0 == and
							(L:VMS_LOW_ALTITUDE) 0 == and
							(L:VMS_OVER_G) 0 == and
							(L:VMS_OVERTEMP_LEFT) 0 == and
							(L:VMS_OVERTEMP_RIGHT) 0 == and

							(L:VMS_ENABLE) 1 == and
							(L:VMS_ENGINE_FIRE_RIGHT_INIT) 0 == and
								if{
									1 (>L:VMS_ENGINE_FIRE_RIGHT) 1 (>L:VMS_ENGINE_FIRE_RIGHT_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:R_ENG_FIRE) 0 ==

							(L:VMS_ENABLE) 0 == or
							(L:VMS_ENGINE_FIRE_RIGHT_INIT) 1 == and
								if{
									0 (>L:VMS_ENGINE_FIRE_RIGHT_INIT)
								}
						</Value>
					</Select>
				</Element>

				<Element Name="AMAD FIRE">
					<Select>
						<Value>
							(L:AMAD_FIRE) 1 ==

							(L:VMS_BINGO_FUEL) 0 == and
							(L:VMS_ENGINE_FIRE_LEFT) 0 == and
							(L:VMS_ENGINE_FIRE_RIGHT) 0 == and
							(L:VMS_FUEL_LOW) 0 == and
							(L:VMS_LOW_ALTITUDE) 0 == and
							(L:VMS_OVER_G) 0 == and
							(L:VMS_OVERTEMP_LEFT) 0 == and
							(L:VMS_OVERTEMP_RIGHT) 0 == and

							(L:VMS_ENABLE) 1 == and
							(L:VMS_AMAD_FIRE_INIT) 0 == and
								if{
									1 (>L:VMS_AMAD_FIRE) 1 (>L:VMS_AMAD_FIRE_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:AMAD_FIRE) 0 ==

							(L:VMS_ENABLE) 0 == or
							(L:VMS_AMAD_FIRE_INIT) 1 == and
								if{
									0 (>L:VMS_AMAD_FIRE_INIT)
								}
						</Value>
					</Select>
				</Element>
			</Element>

			<Element Name="LOW ALTITUDE WARN">
				<Element>
					<Select>
						<Value>
							(L:PULL_UP_WARNING) 1 ==

							(A:GEAR HANDLE POSITION, bool) 0 == and
							(L:VMS_ENABLE) 1 == and
							(L:VMS_LOW_ALTITUDE_INIT) 0 == and
								if{
									1 (>L:low_alt)
									1 (>L:VMS_LOW_ALTITUDE_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(L:PULL_UP_WARNING) 0 ==

							(L:VMS_ENABLE) 0 == or
							(L:VMS_LOW_ALTITUDE_INIT) 1 == and
								if{
									0 (>L:low_alt)
									0 (>L:VMS_LOW_ALTITUDE_INIT)
								}
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="OVER-G WARN">
				<Element>
					<Select>
						<Value>
							(A:G FORCE, G FORCE) (L:OWS_OVER_G_LIMIT) &gt;

							(L:VMS_AMAD_FIRE) 0 == and
							(L:VMS_BINGO_FUEL) 0 == and
							(L:VMS_ENGINE_FIRE_LEFT) 0 == and
							(L:VMS_ENGINE_FIRE_RIGHT) 0 == and
							(L:VMS_FUEL_LOW) 0 == and
							(L:VMS_LOW_ALTITUDE) 0 == and
							(L:VMS_OVERTEMP_LEFT) 0 == and
							(L:VMS_OVERTEMP_RIGHT) 0 == and


							(A:GEAR HANDLE POSITION, bool) 0 == and
							(L:VMS_ENABLE) 1 == and
							(L:VMS_OVER_G_INIT) 0 == and
								if{
									0 (>L:OWS_FACTOR_2)
									2 (>L:VMS_OVER_G)
									1 (>L:VMS_OVER_G_INIT)
								}
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
							(A:G FORCE, G FORCE) (L:OWS_OVER_G_LIMIT) &lt;

							(L:VMS_ENABLE) 0 == or
							(L:VMS_OVER_G_INIT) 1 == and
								if{
									0 (>L:VMS_OVER_G)
									0 (>L:VMS_OVER_G_INIT)
								}
						</Value>
					</Select>
				</Element>
			</Element>
		</Element>
		<Element Name="OWS">
			<Element Name="OWS FACTOR 1 WARN">
				<Select>
					<Value>
						(A:G FORCE, G FORCE) (L:OWS_FACTOR_1_LIMIT) &gt;
						(A:G FORCE, G FORCE) (L:OWS_FACTOR_2_LIMIT) &lt; and

						(A:GEAR HANDLE POSITION, bool) 0 == and
						(L:VMS_ENABLE) 1 == and
						(L:OWS_FACTOR_1_INIT) 0 == and
							if{
								2 (>L:OWS_FACTOR_1)
								1 (>L:OWS_FACTOR_1_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(A:G FORCE, G FORCE) (L:OWS_FACTOR_1_LIMIT) &lt;
						(A:G FORCE, G FORCE) (L:OWS_FACTOR_2_LIMIT) &gt; or

						(L:VMS_ENABLE) 0 == or
						(L:OWS_FACTOR_1_INIT) 1 == and
							if{
								0 (>L:OWS_FACTOR_1)
								0 (>L:OWS_FACTOR_1_INIT)
							}
					</Value>
				</Select>
			</Element>

			<Element Name="OWS FACTOR 2 WARN">
				<Select>
					<Value>
						(A:G FORCE, G FORCE) (L:OWS_FACTOR_2_LIMIT) &gt;

						(A:GEAR HANDLE POSITION, bool) 0 == and
						(L:VMS_ENABLE) 1 == and
						(L:OWS_FACTOR_2_INIT) 0 == and
							if{
								2 (>L:OWS_FACTOR_2)
								1 (>L:OWS_FACTOR_2_INIT)
							}
					</Value>
				</Select>
			</Element>
			<Element>
				<Select>
					<Value>
						(A:G FORCE, G FORCE) (L:OWS_FACTOR_2_LIMIT) &lt;

						(L:VMS_ENABLE) 0 == or
						(L:OWS_FACTOR_2_INIT) 1 == and
							if{
								0 (>L:OWS_FACTOR_2)
								0 (>L:OWS_FACTOR_2_INIT)
							}
					</Value>
				</Select>
			</Element>
		</Element>

		<Element Name="ACS">
			<Element Name="GUN CONTROL">
				<Select>
					<Value>
						(L:HUD_MASTER_MODE) 2 ==
						(A:GEAR CENTER POSITION, Percent) 0 == and
						(A:BRAKE INDICATOR, bool) and
						(L:AO_GUN_AMMO_COUNT) 0 != and
						(L:GUN_TRIG_PWR) 1 == and
						(L:MASTER_ARM) 1 == and
							if{ 1 (>L:GUN_ON) }
							els{ 0 (>L:GUN_ON) }
					</Value>
				</Select>
			</Element>
			<Element Name="GUN INIT">
				<Select>
					<Value>
						(L:GUN_ON) 1 == (L:GUN_ON_TIME, Seconds) 0 == and
							if{ (P:LOCAL TIME, Seconds) (>L:GUN_ON_TIME, Seconds) 1 (>L:GUN_START) }
							els{ }
						(L:GUN_ON) 0 == (L:GUN_ON_TIME, Seconds) 0 &gt; and
							if{ 0 (>L:GUN_ON_TIME, Seconds) 0 (>L:GUN_START) }
							els{ }
					</Value>
				</Select>
			</Element>
			<Element Name="GUN RUN">
				<Select>
					<Value>
						(L:GUN_START) 1 ==
						(P:LOCAL TIME, Seconds) (L:GUN_ON_TIME, Seconds) - 0.5 &gt; and
							if{ 2 (>L:GUN_RUN) 0 (>L:GUN_START) }
					</Value>
				</Select>
			</Element>

			<Element Name="GUN OFF">
				<Select>
					<Value>
					(L:GUN_START) 1 == (L:GUN_RUN) 2 == or
					(L:GUN_ON) 0 == and
						if{ 1 (>L:GUN_STOP) 0 (>L:GUN_RUN) }
					</Value>
				</Select>
			</Element>

			<Element Name="BOMB DROP">
				<Select>
					<Value>
						(L:IF15E_BD) 0 !=
						(L:BOMB_AVAIL) 1 == and
						(L:IF15E_TRIGGER_PRESS) 1 == and
						(L:HUD_MASTER_MODE) 3 == and
						(A:GEAR CENTER POSITION, Percent) 0 == and
						(L:MASTER_ARM) 1 == and
							if{ 1 (>L:BOMB_DROP) }
					</Value>
				</Select>
			</Element>

			<Element Name="AIM-9 AVAIL">
				<Element>
					<Select>
						<Value>
						(L:AO_STA-2A_LTYPE) 1 == (L:AO_STA-2A_LQTY, NUMBER) 1 == and
							if{ 1 (>L:STA-2A_AIM9_AVAIL) }
							els{ 0 (>L:STA-2A_AIM9_AVAIL) }
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
						(L:AO_STA-2B_LTYPE) 1 == (L:AO_STA-2B_LQTY, NUMBER) 1 == and
							if{ 1 (>L:STA-2B_AIM9_AVAIL) }
							els{ 0 (>L:STA-2B_AIM9_AVAIL) }
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
						(L:AO_STA-8A_LTYPE) 1 == (L:AO_STA-8A_LQTY, NUMBER) 1 == and
							if{ 1 (>L:STA-8A_AIM9_AVAIL) }
							els{ 0 (>L:STA-8A_AIM9_AVAIL) }
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
						(L:AO_STA-8B_LTYPE) 1 == (L:AO_STA-8B_LQTY, NUMBER) 1 == and
							if{ 1 (>L:STA-8B_AIM9_AVAIL) }
							els{ 0 (>L:STA-8B_AIM9_AVAIL) }
						</Value>
					</Select>
				</Element>
				<Element>
					<Select>
						<Value>
						(L:STA-2A_AIM9_AVAIL) 1 ==
						(L:STA-2B_AIM9_AVAIL) 1 == or
						(L:STA-8A_AIM9_AVAIL) 1 == or
						(L:STA-8B_AIM9_AVAIL) 1 == or
							if{ 1 (>L:AIM9_AVAIL) }
							els{ 0 (>L:AIM9_AVAIL) }
						</Value>
					</Select>
				</Element>
			</Element>
			<Element Name="AIM9 SEEK">
				<Select>
					<Value>
						(L:AAM_SEL) 1 ==
						(L:AIM9_AVAIL) 1 == and
						(L:HUD_MASTER_MODE) 2 == and
						(A:GEAR CENTER POSITION, Percent) 0 == and
						(L:MASTER_ARM) 1 == and
						(L:LT_FS_LOCK) 0 == and
							if{ 2 (>L:AIM9_SEEK) }
							els{ 0 (>L:AIM9_SEEK) }
					</Value>
				</Select>
			</Element>
			<Element Name="AIM9 LOCK">
				<Select>
					<Value>
						(L:AAM_SEL) 1 ==
						(L:AIM9_AVAIL) 1 == and
						(L:HUD_MASTER_MODE) 2 == and
						(A:GEAR CENTER POSITION, Percent) 0 == and
						(L:MASTER_ARM) 1 == and
						(L:LT_FS_LOCK) 1 == and
							if{ 2 (>L:AIM9_LOCK) }
							els{ 0 (>L:AIM9_LOCK) }
					</Value>
				</Select>
			</Element>
		</Element>
	</Element>

	<Keymap ID="KEYMAP">
		<Trigger ID="TRIGGER">
			<Keyboardkey>CTRL+SHIFT+V</Keyboardkey>
			<Script> 1 (>L:IF15E_TRIGGER_ACT)</Script>
		</Trigger>
	</Keymap>
</Gauge>
